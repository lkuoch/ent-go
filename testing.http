@base_url=http://localhost:8081/query
@timestamp={{$timestamp}}

### Create User
# @name CreateUserMutation
POST {{base_url}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation CreateUser($username: String!, $displayName: String!) {
  createUser(input: {username: $username, displayName: $displayName}) {
    id
    createdAt
  }
}

{
  "username": "U-{{timestamp}}",
  "displayName": "Display Name"
}

### Create Todo
# @name CreateTodoMutation
POST {{base_url}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation CreateTodo($userID: ID!, $title: String!, $body: String!) {
  createTodo(
    input: {userID: $userID, title: $title, body: $body, itemPriority: HIGH, itemStatus: IN_PROGRESS}
  ) {
    id
    title
    body
  }
}

{
  "userID": "{{CreateUserMutation.response.body.data.createUser.id}}",
  "title": "T-{{timestamp}}",
  "body": "body"
}


### Create Task
# @name CreateTaskMutation
POST {{base_url}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation CreateTask($todoId: ID!, $title: String!) {
  createTask(input: {todoID: $todoId, title: $title, itemStatus: IN_PROGRESS}) {
    id
  }
}

{
  "todoId": "{{CreateTodoMutation.response.body.data.createTodo.id}}",
  "title": "T-{{timestamp}}",
}


### Node interface
POST {{base_url}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query Node($id: ID!) {
  node(id: $id) {
    ... on Todo {
      __typename
      id
      title
      itemPriority
      itemStatus
    }
    ... on User {
      id
      username
      createdAt
      displayName
      todos {
        edges {
          node {
            id
            title
          }
        }
      }
    }
    ... on Task {
      id
      title
      itemStatus
    }
  }
}

{
  "id": "{{CreateTodoMutation.response.body.data.createTodo.id}}"
}

### Query All
POST {{base_url}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query Queries {
  todos {
    edges {
      node {
        id
        title
        user {
          displayName
        }
      }
    }
  }
  tasks {
    edges {
      node {
        id
        title
      }
    }
  }
  users {
    edges {
      node {
        id
        username
        displayName
        todos {
          edges {
            node {
              id
              title
            }
          }
        }
      }
    }
  }
}


