package todo

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.27

import (
	"context"
	"fmt"
	"lkuoch/ent-todo/ent/generated"
	"lkuoch/ent-todo/ent/generated/gql"
)

// Node is the resolver for the node field.
func (r *queryResolver) Node(ctx context.Context, id string) (generated.Noder, error) {
	panic(fmt.Errorf("not implemented: Node - node"))
}

// Nodes is the resolver for the nodes field.
func (r *queryResolver) Nodes(ctx context.Context, ids []string) ([]generated.Noder, error) {
	panic(fmt.Errorf("not implemented: Nodes - nodes"))
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*generated.Todo, error) {
	panic(fmt.Errorf("not implemented: Todos - todos"))
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*generated.User, error) {
	panic(fmt.Errorf("not implemented: Users - users"))
}

// ID is the resolver for the id field.
func (r *todoResolver) ID(ctx context.Context, obj *generated.Todo) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// ID is the resolver for the id field.
func (r *userResolver) ID(ctx context.Context, obj *generated.User) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// ChildIDs is the resolver for the childIDs field.
func (r *createTodoInputResolver) ChildIDs(ctx context.Context, obj *generated.CreateTodoInput, data []string) error {
	panic(fmt.Errorf("not implemented: ChildIDs - childIDs"))
}

// ParentID is the resolver for the parentID field.
func (r *createTodoInputResolver) ParentID(ctx context.Context, obj *generated.CreateTodoInput, data *string) error {
	panic(fmt.Errorf("not implemented: ParentID - parentID"))
}

// UserIDs is the resolver for the userIDs field.
func (r *createTodoInputResolver) UserIDs(ctx context.Context, obj *generated.CreateTodoInput, data []string) error {
	panic(fmt.Errorf("not implemented: UserIDs - userIDs"))
}

// TodoIDs is the resolver for the todoIDs field.
func (r *createUserInputResolver) TodoIDs(ctx context.Context, obj *generated.CreateUserInput, data []string) error {
	panic(fmt.Errorf("not implemented: TodoIDs - todoIDs"))
}

// Query returns gql.QueryResolver implementation.
func (r *Resolver) Query() gql.QueryResolver { return &queryResolver{r} }

// Todo returns gql.TodoResolver implementation.
func (r *Resolver) Todo() gql.TodoResolver { return &todoResolver{r} }

// User returns gql.UserResolver implementation.
func (r *Resolver) User() gql.UserResolver { return &userResolver{r} }

// CreateTodoInput returns gql.CreateTodoInputResolver implementation.
func (r *Resolver) CreateTodoInput() gql.CreateTodoInputResolver { return &createTodoInputResolver{r} }

// CreateUserInput returns gql.CreateUserInputResolver implementation.
func (r *Resolver) CreateUserInput() gql.CreateUserInputResolver { return &createUserInputResolver{r} }

type queryResolver struct{ *Resolver }
type todoResolver struct{ *Resolver }
type userResolver struct{ *Resolver }
type createTodoInputResolver struct{ *Resolver }
type createUserInputResolver struct{ *Resolver }
