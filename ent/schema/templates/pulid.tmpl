{{ define "pulid" }}

{{ $pkg := base $.Config.Package }}
{{ template "header" $ }}

// Map of prefix hash to table name
var prefixMap = map[types.ID]string{
	{{- range $node := $.Nodes }}
		{{- if $annotation := $node.Annotations.__PULID__ }}
			"{{ $annotation.Prefix }}": {{ $node.Package }}.Table,
		{{- end }}
	{{- end }}
}

// Resolver for node interface
func IDToType(_ context.Context, id types.ID) (string, error) {
	prefixLength := 16

	if len(id) < prefixLength {
		return "", fmt.Errorf("IDToType: id too short")
	}
	prefix := id[:prefixLength]
	typ := prefixMap[prefix]
	if typ == "" {
		return "", fmt.Errorf("IDToType: could not map prefix '%s' to a type", prefix)
	}
	return typ, nil
}

{{ end }}